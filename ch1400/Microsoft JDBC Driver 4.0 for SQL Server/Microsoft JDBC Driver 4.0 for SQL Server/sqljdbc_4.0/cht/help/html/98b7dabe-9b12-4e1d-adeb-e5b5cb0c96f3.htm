<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>了解並行控制</title><meta name="Language" content="zh-cht" /><meta name="System.Keywords" content="並行" /><meta name="Microsoft.Help.Id" content="98b7dabe-9b12-4e1d-adeb-e5b5cb0c96f3" /><meta name="Description" content="並行控制意指多個使用者同時更新資料列時，用於保留資料庫完整性的各種技術。並行不正確可能導致的問題包括中途讀取、虛設項目讀取，以及不可重複讀取。Microsoft JDBC Driver for SQL Server 提供介面給 SQL Server 所使用的所有並行技術來解決這些問題。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">了解並行控制</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>並行控制意指多個使用者同時更新資料列時，用於保留資料庫完整性的各種技術。並行不正確可能導致的問題包括中途讀取、虛設項目讀取，以及不可重複讀取。Microsoft JDBC Driver for SQL Server 提供介面給 SQL Server 所使用的所有並行技術來解決這些問題。</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>如需有關 SQL Server 並行的詳細資訊，請參閱《SQL Server 線上叢書》中的＜管理並行資料存取＞。</p></div></div><h1 class="heading">備註</h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>JDBC 驅動程式支援下列並行類型：</p><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th><p>並行類型</p></th><th><p>特性</p></th><th><p>資料列鎖定</p></th><th><p>描述</p></th></tr><tr><td><p>CONCUR_READ_ONLY</p></td><td><p>唯讀</p></td><td><p>否</p></td><td><p>不允許透過資料指標進行更新，且構成結果集之資料列中不保留鎖定。</p></td></tr><tr><td><p>CONCUR_UPDATABLE</p></td><td><p>開放式讀寫</p></td><td><p>否</p></td><td><p>資料庫假設未必會發生資料列競爭，但是有可能。資料列的完整性會透過時間戳記比較來確認。</p></td></tr><tr><td><p>CONCUR_SS_SCROLL_LOCKS</p></td><td><p>封閉式 (Pessimistic) 讀寫</p></td><td><p>是</p></td><td><p>資料庫假設可能會發生資料列競爭。資料列的完整性會透過資料列鎖定來確保。</p></td></tr><tr><td><p>CONCUR_SS_OPTIMISTIC_CC</p></td><td><p>開放式讀寫</p></td><td><p>否</p></td><td><p>資料庫假設未必會發生資料列競爭，但是有可能。資料列的完整性會透過時間戳記比較來確認。</p><p>如果是 SQL Server 2005 及更新的版本，如果資料表不包含時間戳記資料行，伺服器會將其變更為 CONCUR_SS_OPTIMISTIC_CCVAL。</p><p>在 SQL Server 2000 中，如果基礎資料表有時間戳記資料行，即使有指定 OPTIMISTIC WITH VALUES，也會使用 OPTIMISTIC WITH ROW VERSIONING。如果指定了 OPTIMISTIC WITH ROW VERSIONING，且資料表沒有時間戳記，就會使用 OPTIMISTIC WITH VALUES。</p></td></tr><tr><td><p>CONCUR_SS_OPTIMISTIC_CCVAL</p></td><td><p>開放式讀寫</p></td><td><p>否</p></td><td><p>資料庫假設未必會發生資料列競爭，但是有可能。資料列的完整性會透過資料列資料比較來確認。</p></td></tr></table></div></div><h1 class="heading">不可更新的結果集</h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p>可更新的結果集是可以在其中插入、更新和刪除的資料集。在下列情況下，SQL Server 無法建立可更新的資料指標。產生的例外狀況為：「結果集無法更新。」。</p><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th><p>原因</p></th><th><p>描述</p></th><th><p>補救方法</p></th></tr><tr><td><p>使用 JDBC 2.0 (或更新版本) 語法沒有建立陳述式</p></td><td><p>JDBC 2.0 推出建立陳述式的新方法。如果使用 JDBC 1.0 語法，結果集預設為唯讀。</p></td><td><p>建立陳述式時，指定結果集類型與並行。</p></td></tr><tr><td><p>使用 TYPE_SCROLL_INSENSITIVE 建立陳述式</p></td><td><p>SQL Server 會建立靜態快照集資料指標。這會與基礎資料表資料列中斷連接，以防資料指標遭到其他使用者更新資料列。</p></td><td><p>搭配 CONCUR_UPDATABLE 使用 TYPE_SCROLL_SENSITIVE、TYPE_SS_SCROLL_KEYSET、TYPE_SS_SCROLL_DYNAMIC 或 TYPE_FORWARD_ONLY 以防建立靜態資料指標。</p></td></tr><tr><td><p>資料表設計會避開 KEYSET 或 DYNAMIC 資料指標</p></td><td><p>基礎資料表沒有唯一的索引鍵，讓 SQL Server 唯一識別資料列。</p></td><td><p>將唯一的索引鍵加入到資料表中即可提供每個資料列的唯一識別。</p></td></tr></table></div></div><span id="seeAlsoSpan"><h1 class="heading">請參閱</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="9ed5ad41-22e0-4e4a-8a79-10512db60d50.htm">使用 JDBC 驅動程式管理結果集</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">將有關本主題的<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\d感謝您的意見反應。開發人員撰寫小組會使用您的意見反應改善文件集。檢閱意見反應的同時，我們可能會傳送電子郵件給您要求提供進一步說明或是解決方案的意見。電子郵件地址不會用於任何其他目的，檢閱後將會刪除。%0\A如需有關%20Microsoft%20隱私權原則的詳細資訊，請參閱%20http://privacy.microsoft.com/zh-tw/default.aspx。%0\A%0\d','客戶回函');">意見反應</a>傳送給 Microsoft。</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012 Microsoft.著作權所有，並保留一切權利。</a></p></span></div></div></body></html>