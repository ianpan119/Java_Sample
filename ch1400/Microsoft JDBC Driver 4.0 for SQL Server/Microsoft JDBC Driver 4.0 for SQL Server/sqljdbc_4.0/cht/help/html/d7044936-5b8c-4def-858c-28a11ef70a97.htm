<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>使用基本資料類型</title><meta name="Language" content="zh-cht" /><meta name="System.Keywords" content="基本資料類型" /><meta name="Microsoft.Help.Id" content="d7044936-5b8c-4def-858c-28a11ef70a97" /><meta name="Description" content="Microsoft JDBC Driver for SQL Server 會使用 JDBC 基本資料類型，將 SQL Server 資料類型轉換為 Java 程式語言可以理解的格式，反之亦然。JDBC 驅動程式提供 JDBC 4.0 API 的支援，其中包括 SQLXML 資料類型和 National (Unicode) 資料類型，例如 NCHAR、NVARCHAR、LONGNVARCHAR 和 NCLOB。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">使用基本資料類型</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>Microsoft JDBC Driver for SQL Server 會使用 JDBC 基本資料類型，將 SQL Server 資料類型轉換為 Java 程式語言可以理解的格式，反之亦然。JDBC 驅動程式提供 JDBC 4.0 API 的支援，其中包括 <span sdata="langKeyword" value="SQLXML"><span class="keyword">SQLXML</span></span> 資料類型和 National (Unicode) 資料類型，例如 <span sdata="langKeyword" value="NCHAR"><span class="keyword">NCHAR</span></span>、<span sdata="langKeyword" value="NVARCHAR"><span class="keyword">NVARCHAR</span></span>、<span sdata="langKeyword" value="LONGNVARCHAR"><span class="keyword">LONGNVARCHAR</span></span> 和 <span sdata="langKeyword" value="NCLOB"><span class="keyword">NCLOB</span></span>。</p></div><h1 class="heading">資料類型對應</h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>下表會列出基本 SQL Server、JDBC 及 Java 程式語言資料類型之間的預設對應：</p><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th><p>SQL Server 類型</p></th><th><p>JDBC 類型 (java.sql.Types)</p></th><th><p>Java 語言類型</p></th></tr><tr><td><p>bigint</p></td><td><p>BIGINT</p></td><td><p>long</p></td></tr><tr><td><p>binary</p></td><td><p>BINARY</p></td><td><p>byte[]</p></td></tr><tr><td><p>bit</p></td><td><p>BIT</p></td><td><p>boolean</p></td></tr><tr><td><p>char</p></td><td><p>CHAR</p></td><td><p>String</p></td></tr><tr><td><p>date</p></td><td><p>DATE</p></td><td><p>java.sql.Date</p></td></tr><tr><td><p>datetime</p></td><td><p>TIMESTAMP</p></td><td><p>java.sql.Timestamp</p></td></tr><tr><td><p>datetime2</p></td><td><p>TIMESTAMP</p></td><td><p>java.sql.Timestamp</p></td></tr><tr><td><p>datetimeoffset (2)</p></td><td><p>microsoft.sql.Types.DATETIMEOFFSET</p></td><td><p>microsoft.sql.DateTimeOffset</p></td></tr><tr><td><p>decimal</p></td><td><p>DECIMAL</p></td><td><p>java.math.BigDecimal</p></td></tr><tr><td><p>float</p></td><td><p>DOUBLE</p></td><td><p>double</p></td></tr><tr><td><p>image</p></td><td><p>LONGVARBINARY</p></td><td><p>byte[]</p></td></tr><tr><td><p>int</p></td><td><p>INTEGER</p></td><td><p>int</p></td></tr><tr><td><p>money</p></td><td><p>DECIMAL</p></td><td><p>java.math.BigDecimal</p></td></tr><tr><td><p>nchar</p></td><td><p>CHAR</p><p>NCHAR (Java SE 6.0)</p></td><td><p>String</p></td></tr><tr><td><p>ntext</p></td><td><p>LONGVARCHAR</p><p>LONGNVARCHAR (Java SE 6.0)</p></td><td><p>String</p></td></tr><tr><td><p>numeric</p></td><td><p>NUMERIC</p></td><td><p>java.math.BigDecimal</p></td></tr><tr><td><p>nvarchar</p></td><td><p>VARCHAR</p><p>NVARCHAR (Java SE 6.0)</p></td><td><p>String</p></td></tr><tr><td><p>nvarchar(max)</p></td><td><p>VARCHAR</p><p>NVARCHAR (Java SE 6.0)</p></td><td><p>String</p></td></tr><tr><td><p>real</p></td><td><p>REAL</p></td><td><p>float</p></td></tr><tr><td><p>smalldatetime</p></td><td><p>TIMESTAMP</p></td><td><p>java.sql.Timestamp</p></td></tr><tr><td><p>smallint</p></td><td><p>SMALLINT</p></td><td><p>short</p></td></tr><tr><td><p>smallmoney</p></td><td><p>DECIMAL</p></td><td><p>java.math.BigDecimal</p></td></tr><tr><td><p>text</p></td><td><p>LONGVARCHAR</p></td><td><p>String</p></td></tr><tr><td><p>time</p></td><td><p>TIME (1)</p></td><td><p>java.sql.Time (1)</p></td></tr><tr><td><p>timestamp</p></td><td><p>BINARY</p></td><td><p>byte[]</p></td></tr><tr><td><p>tinyint</p></td><td><p>TINYINT</p></td><td><p>short</p></td></tr><tr><td><p>udt</p></td><td><p>VARBINARY</p></td><td><p>byte[]</p></td></tr><tr><td><p>uniqueidentifier</p></td><td><p>CHAR</p></td><td><p>String</p></td></tr><tr><td><p>varbinary</p></td><td><p>VARBINARY</p></td><td><p>byte[]</p></td></tr><tr><td><p>varbinary(max)</p></td><td><p>VARBINARY</p></td><td><p>byte[]</p></td></tr><tr><td><p /></td><td><p /></td><td><p /></td></tr><tr><td><p>varchar</p></td><td><p>VARCHAR</p></td><td><p>String</p></td></tr><tr><td><p>varchar(max)</p></td><td><p>VARCHAR</p></td><td><p>String</p></td></tr><tr><td><p>xml</p></td><td><p>LONGVARCHAR</p><p>LONGNVARCHAR (Java SE 6.0)</p></td><td><p>String</p><p>SQLXML</p></td></tr></table></div><p>(1) 若要搭配 SQL Server 時間類型使用 java.sql.Time，您必須將 <span sdata="langKeyword" value="sendTimeAsDatetime"><span class="keyword">sendTimeAsDatetime</span></span> 連接屬性設為 false。</p><p>(2) 您可以使用 <span sdata="link"><a href="20bbeacd-ccca-4a46-8184-ff941ae2ec5f.htm">DateTimeOffset 類別</a></span> 來以程式設計方式存取 <span sdata="langKeyword" value="datetimeoffset"><span class="keyword">datetimeoffset</span></span> 的值。</p><p>JDBC 驅動程式目前不支援 SQL Server sqlvariant 資料類型。如果使用查詢以擷取資料表 (包含 sqlvariant 資料類型的資料行) 的資料，會發生例外狀況。</p><p>下列章節會提供如何使用 JDBC Driver 與基本資料類型的範例。如需如何在 Java 應用程式中使用基本資料類型的更詳細範例，請參閱＜<span sdata="link"><a href="59ac80cf-fc66-4493-933d-38e479c5f54d.htm">基本資料類型範例</a></span>＞。</p></div><h1 class="heading">擷取資料為字串</h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p>如果您必須從對應至任何 JDBC 基本資料類型的資料來源擷取資料，以當作字串檢視，或者如果不需要強類型資料，則可以使用 <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> 類別的 <a href="f81dde01-d328-4b32-8871-1efac645b68e.htm">getString</a> 方法，如下所示：</p><div name="snippetGroup"><div class="sampleCode"><span codeLanguage="Java"><pre>String SQL = "SELECT TOP 10 * FROM Person.Contact";
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery(SQL);

while (rs.next()) {
   System.out.println(rs.getString(4) + " " + rs.getString(6));
}
rs.close();
stmt.close();

</pre></span></div></div></div><h1 class="heading">依資料類型擷取資料</h1><div id="sectionSection2" class="section" name="collapseableSection" style=""><p>如果您必須從資料來源擷取資料，而您知道正在擷取的資料類型，您應該使用 <b>SQLServerResultSet</b> 類別的其中一個 <b>get&lt;Type&gt;</b> 方法，也就是<span class="term">「getter 方法」</span>(getter Method)。您可使用資料行名稱或資料行索引搭配 <b>get&lt;Type&gt;</b> 方法，如下所示：</p><div name="snippetGroup"><div class="sampleCode"><span codeLanguage="Java"><pre>ResultSet rs = stmt.executeQuery("SELECT lname, job_id FROM employee
   WHERE (lname = 'Brown')");
rs.next();
short empJobID = rs.getShort("job_id");
rs.close();
stmt.close();

</pre></span></div></div><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p><b>getUnicodeStream</b> 與具有 scale 方法的 <b>getBigDecimal</b> 都已被取代，並且 JDBC 驅動程式並不支援。</p></div></div><h1 class="heading">依資料類型更新資料</h1><div id="sectionSection3" class="section" name="collapseableSection" style=""><p>如果您必須更新資料來源中的欄位值，請使用 <b>SQLServerResultSet</b> 類別的其中一個 <b>update&lt;Type&gt;</b> 方法。在下列範例中，<a href="2bb0319e-12cb-4604-a7e3-b22a24b02296.htm">updateInt</a> 方法會結合 <a href="cfced0ca-a281-40dc-8d2f-370d5f0bf12b.htm">updateRow</a> 方法使用，以更新資料來源的資料：</p><div name="snippetGroup"><div class="sampleCode"><span codeLanguage="Java"><pre>Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE); 
ResultSet rs = stmt.executeQuery("SELECT lname, job_id FROM employee
   WHERE (lname = 'Brown')");
rs.next();
short empJobID = rs.getInt(2);
empJobID++;
rs.first();
rs.updateInt(2, empJobID);
rs.updateRow();
rs.close();
stmt.close();

</pre></span></div></div><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>JDBC Driver 無法更新資料行名稱長度超過 127 個字元的 SQL Server 資料行。如果嘗試更新名稱超過 127 個字元的資料行，就會擲回例外狀況。</p></div></div><h1 class="heading">依參數化查詢更新資料</h1><div id="sectionSection4" class="section" name="collapseableSection" style=""><p>如果您必須使用參數化查詢更新資料來源中的資料，您可以使用 <a href="a8481c06-fbba-432b-8c69-4f4619c20ad4.htm">SQLServerPreparedStatement</a> 類別的其中一個 <b>set&lt;Type&gt;</b> 方法 (也稱為<span class="term">「setter 方法」</span>(setter Method))，以設定參數的資料類型。在下列範例中，<a href="bd4e4085-f704-4a73-b6a7-7d443d564728.htm">prepareStatement</a> 方法用來預先編譯參數化查詢，然後在呼叫 <a href="ca534c6b-ef4d-4ae8-8cc3-514728623cff.htm">executeUpdate</a> 方法之前，使用 <a href="25dabdc9-c60f-485a-87eb-306067964765.htm">setString</a> 方法設定參數的字串值。</p><div name="snippetGroup"><div class="sampleCode"><span codeLanguage="Java"><pre>PreparedStatement pstmt = con.prepareStatement("UPDATE employee SET
   fname = ? WHERE (lname = 'Brown')");
String first = "Bob";
pstmt.setString(1, first);
int rowCount = pstmt.executeUpdate();
pstmt.close();

</pre></span></div></div><p>如需參數化查詢的詳細資訊，請參閱＜<span sdata="link"><a href="3202b88f-ce13-44dd-982c-c6a3b0260378.htm">搭配參數使用 SQL 陳述式</a></span>＞。</p></div><h1 class="heading">傳遞參數至預存程序</h1><div id="sectionSection5" class="section" name="collapseableSection" style=""><p>如果您必須將具類型參數傳遞至預存程序，您可使用 <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> 類別的其中一個 <b>set&lt;Type&gt;</b> 方法，依索引或名稱設定參數。在下列範例中，<a href="265b024c-898a-4bd0-98b5-f06076717b9e.htm">prepareCall</a> 方法用來設定預存程序的呼叫，然後在呼叫 <a href="599cf463-e19f-4baa-bacb-513cad7c6cd8.htm">executeQuery</a> 方法之前，使用 <a href="f38b97b5-d4f0-4f74-a33d-740241a85842.htm">setString</a> 方法以設定呼叫的參數。</p><div name="snippetGroup"><div class="sampleCode"><span codeLanguage="Java"><pre>CallableStatement cstmt = con.prepareCall("{call employee_jobid(?)}");
String lname = "Brown";
cstmt.setString(1, lname);
Resultset rs = cstmt.executeQuery();
rs.close();
cstmt.close();

</pre></span></div></div><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>在此範例中，結果集會傳回執行預存程序的結果。</p></div><p>如需以預存程序和輸入參數使用 JDBC 驅動程式的詳細資訊，請參閱＜<span sdata="link"><a href="8f491b70-7d1b-42bd-964f-9a8b86af5eaa.htm">使用含有輸入參數的預存程序</a></span>＞。</p></div><h1 class="heading">從預存程序中擷取參數</h1><div id="sectionSection6" class="section" name="collapseableSection" style=""><p>如果您必須從預存程序擷取參數，您必須先使用 <b>SQLServerCallableStatement</b> 類別的 <a href="82f8d608-efc1-4af8-a985-ec25d19420aa.htm">registerOutParameter</a> 方法，依據名稱或索引註冊 out 參數，然後在執行預存程序的呼叫之後，將傳回的 out 參數指定給適當的變數。在下列範例中，<b>prepareCall</b> 方法用來設定預存程序的呼叫，而 <b>registerOutParameter</b> 方法則用來設定 out 參數，然後在呼叫 <b>executeQuery</b> 方法之前，使用 <a href="f38b97b5-d4f0-4f74-a33d-740241a85842.htm">setString</a> 方法設定呼叫的參數。由預存程序的 out 參數所傳回的值，可使用 <a href="9e3c51bc-7285-4f28-92c8-cfa05e49da9e.htm">getShort</a> 方法擷取。</p><div name="snippetGroup"><div class="sampleCode"><span codeLanguage="Java"><pre>CallableStatement cstmt = con.prepareCall("{call employee_jobid (?, ?)}");
cstmt.registerOutParameter(2, java.sql.Types.SMALLINT);
String lname = "Brown";
cstmt.setString(1, lname);
Resultset rs = cstmt.executeQuery();
short empJobID = cstmt.getShort(2);
rs.close();
cstmt.close();

</pre></span></div></div><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>除了傳回的 out 參數之外，結果集也會傳回執行預存程序的結果。</p></div><p>如需如何使用 JDBC 驅動程式與預存程序和輸出參數搭配的詳細資訊，請參閱＜<span sdata="link"><a href="1c006f27-7e99-43d5-974c-7b782659290c.htm">使用含有輸出參數的預存程序</a></span>＞。</p></div><span id="seeAlsoSpan"><h1 class="heading">請參閱</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="7802328d-4d23-4775-9573-4169b127d258.htm">了解 JDBC Driver 資料類型</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">將有關本主題的<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\d感謝您的意見反應。開發人員撰寫小組會使用您的意見反應改善文件集。檢閱意見反應的同時，我們可能會傳送電子郵件給您要求提供進一步說明或是解決方案的意見。電子郵件地址不會用於任何其他目的，檢閱後將會刪除。%0\A如需有關%20Microsoft%20隱私權原則的詳細資訊，請參閱%20http://privacy.microsoft.com/zh-tw/default.aspx。%0\A%0\d','客戶回函');">意見反應</a>傳送給 Microsoft。</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012 Microsoft.著作權所有，並保留一切權利。</a></p></span></div></div></body></html>