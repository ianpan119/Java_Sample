<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>了解資料類型差異</title><meta name="Language" content="zh-cht" /><meta name="System.Keywords" content="資料類型差異" /><meta name="Microsoft.Help.Id" content="ab8fa00f-cb16-47e2-94b8-3a76f56c2b84" /><meta name="Description" content="Java 程式語言資料類型與 SQL Server 資料類型之間，存在一些差異。Microsoft JDBC Driver for SQL Server 驅動程式會透過各種類型的轉換，協助調解這些差異。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">了解資料類型差異</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>Java 程式語言資料類型與 SQL Server 資料類型之間，存在一些差異。Microsoft JDBC Driver for SQL Server 驅動程式會透過各種類型的轉換，協助調解這些差異。</p></div><h1 class="heading">字元類型</h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>JDBC 字元字串資料類型為 <span sdata="langKeyword" value="CHAR"><span class="keyword">CHAR</span></span>、<span sdata="langKeyword" value="VARCHAR"><span class="keyword">VARCHAR</span></span> 和 <span sdata="langKeyword" value="LONGVARCHAR"><span class="keyword">LONGVARCHAR</span></span>。JDBC 驅動程式提供 JDBC 4.0 API 的支援。在 JDBC 4.0 中，JDBC 字元字串資料類型也可以是 <span sdata="langKeyword" value="NCHAR"><span class="keyword">NCHAR</span></span>、<span sdata="langKeyword" value="NVARCHAR"><span class="keyword">NVARCHAR</span></span> 和 <span sdata="langKeyword" value="LONGNVARCHAR"><span class="keyword">LONGNVARCHAR</span></span>。這些新的字元字串類型會以 Unicode 格式維護 Java 原生字元類型，並且移除執行任何 ANSI-to-Unicode 或 Unicode-to-ANSI 轉換的需求。</p><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th><p>類型</p></th><th><p>描述</p></th></tr><tr><td><p>Fixed-length</p></td><td><p>SQL Server <span sdata="langKeyword" value="char"><span class="keyword">char</span></span> 和 <span sdata="langKeyword" value="nchar"><span class="keyword">nchar</span></span> 資料類型會直接對應到 JDBC <span sdata="langKeyword" value="CHAR"><span class="keyword">CHAR</span></span> 和 <span sdata="langKeyword" value="NCHAR"><span class="keyword">NCHAR</span></span> 類型。這些是當資料行具有 SET ANSI_PADDING ON 時，會由伺服器提供填補的固定長度類型。<span sdata="langKeyword" value="nchar"><span class="keyword">nchar</span></span> 一定會開啟填補；至於 <span sdata="langKeyword" value="char"><span class="keyword">char</span></span>，當伺服器 char 資料行未開啟填補時，JDBC 驅動程式會加入填補。</p></td></tr><tr><td><p>Variable-length</p></td><td><p>SQL Server <span sdata="langKeyword" value="varchar"><span class="keyword">varchar</span></span> 和 <span sdata="langKeyword" value="nvarchar"><span class="keyword">nvarchar</span></span> 類型會直接分別對應到 JDBC <span sdata="langKeyword" value="VARCHAR"><span class="keyword">VARCHAR</span></span> 和 <span sdata="langKeyword" value="NVARCHAR"><span class="keyword">NVARCHAR</span></span> 類型。</p></td></tr><tr><td><p>Long</p></td><td><p>SQL Server <span sdata="langKeyword" value="text"><span class="keyword">text</span></span> 和 <span sdata="langKeyword" value="ntext"><span class="keyword">ntext</span></span> 型別會分別對應到 JDBC <span sdata="langKeyword" value="LONGVARCHAR"><span class="keyword">LONGVARCHAR</span></span> 和 <span sdata="langKeyword" value="LONGNVARCHAR"><span class="keyword">LONGNVARCHAR</span></span> 型別。從 SQL Server 2005 開始，這些型別都已經被取代，因此您應該改用大數值型別 <span sdata="langKeyword" value="varchar(max)"><span class="keyword">varchar(max)</span></span> 或 <span sdata="langKeyword" value="nvarchar(max)"><span class="keyword">nvarchar(max)</span></span>。</p><p>針對 <span sdata="langKeyword" value="text"><span class="keyword">text</span></span> 和 <span sdata="langKeyword" value="ntext"><span class="keyword">ntext</span></span> 伺服器資料行使用 <b>update&lt;Numeric Type&gt;</b> 和 <a href="4993dfe1-2232-4b3c-b931-dfdb35dd225a.htm">updateObject (int, java.lang.Object)</a> 方法會失敗。不過，支援對 <span sdata="langKeyword" value="text"><span class="keyword">text</span></span> 和 <span sdata="langKeyword" value="ntext"><span class="keyword">ntext</span></span> 伺服器資料行使用 <a href="93a2b22c-82b4-48c7-a428-369ebe98a372.htm">setObject</a> 方法，並搭配指定的字元轉換類型。</p></td></tr></table></div></div><h1 class="heading">二進位字串類型</h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p>JDBC 二進位字串類型為 <span sdata="langKeyword" value="BINARY"><span class="keyword">BINARY</span></span>、<span sdata="langKeyword" value="VARBINARY"><span class="keyword">VARBINARY</span></span> 和 <span sdata="langKeyword" value="LONGVARBINARY"><span class="keyword">LONGVARBINARY</span></span>。</p><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th><p>類型</p></th><th><p>描述</p></th></tr><tr><td><p>Fixed-length</p></td><td><p>SQL Server <span sdata="langKeyword" value="binary"><span class="keyword">binary</span></span> 類型會直接對應到 JDBC <span sdata="langKeyword" value="BINARY"><span class="keyword">BINARY</span></span> 類型。這是當資料行具有 SET ANSI_PADDING ON 時，會由伺服器提供填補的固定長度類型。當伺服器 char 資料行未開啟填補時，JDBC 驅動程式會加入填補。</p><p>SQL Server <span sdata="langKeyword" value="timestamp"><span class="keyword">timestamp</span></span> 類型是固定長度為 8 個位元組的 JDBC <span sdata="langKeyword" value="BINARY"><span class="keyword">BINARY</span></span> 類型。</p></td></tr><tr><td><p>Variable-length</p></td><td><p>SQL Server <span sdata="langKeyword" value="varbinary"><span class="keyword">varbinary</span></span> 類型會對應到 JDBC <span sdata="langKeyword" value="VARBINARY"><span class="keyword">VARBINARY</span></span> 類型。</p><p>SQL Server 中的 <span sdata="langKeyword" value="udt"><span class="keyword">udt</span></span> 型別會將 JDBC 對應為 <span sdata="langKeyword" value="VARBINARY"><span class="keyword">VARBINARY</span></span> 型別。</p></td></tr><tr><td><p>Long</p></td><td><p>SQL Server <span sdata="langKeyword" value="image"><span class="keyword">image</span></span> 型別會對應到 JDBC <span sdata="langKeyword" value="LONGVARBINARY"><span class="keyword">LONGVARBINARY</span></span> 型別。從 SQL Server 2005 開始，這個型別已被取代，因此您應該改用大數值型別 <span sdata="langKeyword" value="varbinary(max)"><span class="keyword">varbinary(max)</span></span>。</p></td></tr></table></div></div><h1 class="heading">精確數值類型</h1><div id="sectionSection2" class="section" name="collapseableSection" style=""><p>JDBC 精確數值類型會直接對應到其相對應的 SQL Server 類型。</p><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th><p>類型</p></th><th><p>描述</p></th></tr><tr><td><p>BIT</p></td><td><p>JDBC <span sdata="langKeyword" value="BIT"><span class="keyword">BIT</span></span> 類型代表可為 0 或 1 的單一位元。這會對應到 SQL Server <span sdata="langKeyword" value="bit"><span class="keyword">bit</span></span> 類型。</p></td></tr><tr><td><p>TINYINT</p></td><td><p>DBC <span sdata="langKeyword" value="TINYINT"><span class="keyword">TINYINT</span></span> 類型代表單一位元組。這會對應到 SQL Server <span sdata="langKeyword" value="tinyint"><span class="keyword">tinyint</span></span> 類型。</p></td></tr><tr><td><p>SMALLINT</p></td><td><p>JDBC <span sdata="langKeyword" value="SMALLINT"><span class="keyword">SMALLINT</span></span> 類型代表帶正負號的 16 位元整數。這會對應到 SQL Server <span sdata="langKeyword" value="smallint"><span class="keyword">smallint</span></span> 類型。</p></td></tr><tr><td><p>INTEGER</p></td><td><p>JDBC <span sdata="langKeyword" value="INTEGER"><span class="keyword">INTEGER</span></span> 類型代表帶正負號的 32 位元整數。這會對應到 SQL Server <span sdata="langKeyword" value="int"><span class="keyword">int</span></span> 類型。</p></td></tr><tr><td><p>BIGINT</p></td><td><p>JDBC <span sdata="langKeyword" value="BIGINT"><span class="keyword">BIGINT</span></span> 類型代表帶正負號的 64 位元整數。這會對應到 SQL Server <span sdata="langKeyword" value="bigint"><span class="keyword">bigint</span></span> 類型。</p></td></tr><tr><td><p>NUMERIC</p></td><td><p>JDBC <span sdata="langKeyword" value="NUMERIC"><span class="keyword">NUMERIC</span></span> 類型代表固定有效位數的十進位值，此值會保留相同的有效位數。<span sdata="langKeyword" value="NUMERIC"><span class="keyword">NUMERIC</span></span> 類型會對應至 SQL Server <span sdata="langKeyword" value="numeric"><span class="keyword">numeric</span></span> 類型。</p></td></tr><tr><td><p>DECIMAL</p></td><td><p>JDBC <span sdata="langKeyword" value="DECIMAL"><span class="keyword">DECIMAL</span></span> 類型代表固定有效位數的十進位值，此值至少會保留到所指定的有效位數。<span sdata="langKeyword" value="DECIMAL"><span class="keyword">DECIMAL</span></span> 類型會對應至 SQL Server <span sdata="langKeyword" value="decimal"><span class="keyword">decimal</span></span> 類型。</p><p>JDBC <span sdata="langKeyword" value="DECIMAL"><span class="keyword">DECIMAL</span></span> 類型也會對應到 SQL Server <span sdata="langKeyword" value="money"><span class="keyword">money</span></span> 和 <span sdata="langKeyword" value="smallmoney"><span class="keyword">smallmoney</span></span> 類型，這兩個是特定的固定有效位數 decimal 類型，分別儲存為 8 個位元組和 4 個位元組。</p></td></tr></table></div></div><h1 class="heading">近似數值類型</h1><div id="sectionSection3" class="section" name="collapseableSection" style=""><p>JDBC 近似數值類型為 <span sdata="langKeyword" value="REAL"><span class="keyword">REAL</span></span>、<span sdata="langKeyword" value="DOUBLE"><span class="keyword">DOUBLE</span></span> 和 <span sdata="langKeyword" value="FLOAT"><span class="keyword">FLOAT</span></span>。</p><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th><p>類型</p></th><th><p>描述</p></th></tr><tr><td><p>REAL</p></td><td><p>JDBC <span sdata="langKeyword" value="REAL"><span class="keyword">REAL</span></span> 類型具有 7 個位數的有效位數 (單精確度)，並會直接對應到 SQL Server <span sdata="langKeyword" value="real"><span class="keyword">real</span></span> 類型。</p></td></tr><tr><td><p>DOUBLE</p></td><td><p>JDBC <span sdata="langKeyword" value="DOUBLE"><span class="keyword">DOUBLE</span></span> 類型具有 15 個位數的有效位數 (雙精確度)，並會對應到 SQL Server <span sdata="langKeyword" value="float"><span class="keyword">float</span></span> 類型。JDBC <span sdata="langKeyword" value="FLOAT"><span class="keyword">FLOAT</span></span> 類型是 <span sdata="langKeyword" value="DOUBLE"><span class="keyword">DOUBLE</span></span> 的同義字。由於在 <span sdata="langKeyword" value="FLOAT"><span class="keyword">FLOAT</span></span> 和 <span sdata="langKeyword" value="DOUBLE"><span class="keyword">DOUBLE</span></span> 之間可能會產生混淆，因此偏好使用 <span sdata="langKeyword" value="DOUBLE"><span class="keyword">DOUBLE</span></span>。</p></td></tr></table></div></div><h1 class="heading">日期時間類型</h1><div id="sectionSection4" class="section" name="collapseableSection" style=""><p>JDBC <span sdata="langKeyword" value="TIMESTAMP"><span class="keyword">TIMESTAMP</span></span> 類型會對應到 SQL Server <span sdata="langKeyword" value="datetime"><span class="keyword">datetime</span></span> 和 <span sdata="langKeyword" value="smalldatetime"><span class="keyword">smalldatetime</span></span> 類型。<span sdata="langKeyword" value="datetime"><span class="keyword">datetime</span></span> 類型會以兩個 4 位元組的整數儲存。<span sdata="langKeyword" value="smalldatetime"><span class="keyword">smalldatetime</span></span> 類型會以兩個 2 位元組的小整數來保留相同的資訊 (日期和時間)，但較不精確。</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>SQL Server <span sdata="langKeyword" value="timestamp"><span class="keyword">timestamp</span></span> 類型是固定長度的二進位字串類型。它不會對應到任何的 JDBC 時間類型：<span sdata="langKeyword" value="DATE"><span class="keyword">DATE</span></span>、<span sdata="langKeyword" value="TIME"><span class="keyword">TIME</span></span> 或 <span sdata="langKeyword" value="TIMESTAMP"><span class="keyword">TIMESTAMP</span></span>。</p></div></div><h1 class="heading">自訂類型對應</h1><div id="sectionSection5" class="section" name="collapseableSection" style=""><p>JDBC 驅動程式中並未實作 JDBC 自訂類型對應功能，此功能會將 <b>SQLData</b> 介面用於 JDBC 進階類型 (UDT、Struct 等)。</p></div><span id="seeAlsoSpan"><h1 class="heading">請參閱</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="7802328d-4d23-4775-9573-4169b127d258.htm">了解 JDBC Driver 資料類型</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">將有關本主題的<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\d感謝您的意見反應。開發人員撰寫小組會使用您的意見反應改善文件集。檢閱意見反應的同時，我們可能會傳送電子郵件給您要求提供進一步說明或是解決方案的意見。電子郵件地址不會用於任何其他目的，檢閱後將會刪除。%0\A如需有關%20Microsoft%20隱私權原則的詳細資訊，請參閱%20http://privacy.microsoft.com/zh-tw/default.aspx。%0\A%0\d','客戶回函');">意見反應</a>傳送給 Microsoft。</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012 Microsoft.著作權所有，並保留一切權利。</a></p></span></div></div></body></html>