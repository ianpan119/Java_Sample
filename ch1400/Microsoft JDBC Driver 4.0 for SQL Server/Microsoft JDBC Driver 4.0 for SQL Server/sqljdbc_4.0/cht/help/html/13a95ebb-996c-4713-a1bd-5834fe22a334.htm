<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>快取結果集資料範例</title><meta name="Language" content="zh-cht" /><meta name="System.Keywords" content="快取結果集範例" /><meta name="Microsoft.Help.Id" content="13a95ebb-996c-4713-a1bd-5834fe22a334" /><meta name="Description" content="此 Microsoft JDBC Driver for SQL Server 範例應用程式示範如何從資料庫擷取大型資料集，然後使用 SQLServerResultSet 物件的 setFetchSize 方法，控制在用戶端上快取的資料列數。" /><meta name="Microsoft.Help.ContentType" content="Samples" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">快取結果集資料範例</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>此 Microsoft JDBC Driver for SQL Server 範例應用程式示範如何從資料庫擷取大型資料集，然後使用 <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> 物件的 <a href="233bf4f8-4758-42d0-a80b-33e34fa78027.htm">setFetchSize</a> 方法，控制在用戶端上快取的資料列數。</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>限制在用戶端上快取的列數不同於限制結果集可以包含的總列數。若要控制結果集中包含的總列數，請使用 <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> 物件的 <a href="cccc0667-589b-4655-8ea8-14ae8b2eb9dc.htm">setMaxRows</a> 方法，<a href="a8481c06-fbba-432b-8c69-4f4619c20ad4.htm">SQLServerPreparedStatement</a> 和 <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> 物件兩者也繼承此方法。</p></div><p>若要對用戶端上快取的列數設定限制，您必須先在建立其中一個 <b>Statement</b> 物件時使用伺服器端資料指標，方法為特別地陳述要在建立 <b>Statement</b> 物件時使用的資料指標。例如，JDBC 驅動程式提供 TYPE_SS_SERVER_CURSOR_FORWARD_ONLY 資料指標類型，這是與 SQL Server 資料庫搭配使用的快速順向、唯讀的伺服器端資料指標。</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>除了使用 SQL Server 特定資料指標類型，另一種方法是使用 selectMethod 連接字串屬性，並將其值設為 "cursor"。如需 JDBC 驅動程式所支援之資料指標類型的詳細資訊，請參閱＜<span sdata="link"><a href="4f4d3db7-4f76-450d-ab63-141237a4f034.htm">了解資料指標類型</a></span>＞。</p></div><p>在執行了 <b>Statement</b> 物件中包含的查詢且資料傳回至用戶端作為結果集之後，您可以呼叫 <b>setFetchSize</b> 方法，控制一次可從資料庫擷取多少資料。例如，如果有一個資料表包含 100 列資料，但您將提取大小設為 10，則任何時間點只會在用戶端上快取 10 列資料。雖然這會減慢資料的處理速度，但是它具有在用戶端上使用更少記憶體的優點，當您需要處理大量資料時，此優點特別有用。</p><p>此範例的程式碼檔案名稱為 cacheRS.java，可以在下列位置找到它：</p><p>&lt;<i>安裝目錄</i>&gt;\sqljdbc_&lt;<i>版本</i>&gt;\&lt;<i>語言</i>&gt;\help\samples\resultsets</p></div><h1 class="heading">需求</h1><div id="requirementsTitleSection" class="section" name="collapseableSection" style=""><p>若要執行此範例應用程式，您必須將 Classpath 設定為包含 sqljdbc.jar 檔案或 sqljdbc4.jar 檔案。如果 Classpath 遺漏 sqljdbc.jar 或 sqljdbc4.jar 的項目，範例應用程式將會擲回「找不到類別」的一般例外狀況。您也需要擁有 SQL Server 2005 AdventureWorks 範例資料庫的存取權。如需有關如何設定 Classpath 的詳細資訊，請參閱＜<span sdata="link"><a href="6faaf05b-8b70-4ed2-9b44-eee5897f1cd0.htm">使用 JDBC 驅動程式</a></span>＞。</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>Microsoft JDBC Driver for SQL Server 提供 sqljdbc.jar 和 sqljdbc4.jar 類別庫檔案，可根據您慣用的 Java Runtime Environment (JRE) 設定使用。如需有關應該選擇哪個 JAR 檔案的詳細資訊，請參閱＜<span sdata="link"><a href="447792bb-f39b-49b4-9fd0-1ef4154c74ab.htm">JDBC 驅動程式的系統需求</a></span>＞。</p></div></div><h1 class="heading">範例</h1><div id="exampleSection" class="section" name="collapseableSection" style=""><p>在下列範例中，範例程式碼會建立與 AdventureWorks 範例資料庫的連接。接著，它會使用 SQL 陳述式與 <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> 物件搭配、指定伺服器端資料指標類型，然後執行 SQL 陳述式，並將其傳回的資料放入 <b>SQLServerResultSet</b> 物件中。</p><p>接著，範例程式碼會呼叫自訂的 <b>timerTest</b> 方法，將要使用的提取大小及結果集當作引數來傳遞。然後 <b>timerTest</b> 方法會使用 <b>setFetchSize</b> 方法設定結果集的提取大小、設定測試的開始時間，然後利用 <span class="code">While</span> 迴圈，重複執行結果集。<span class="code">While</span> 迴圈一結束，程式碼就會設定測試的停止時間，然後顯示測試的結果，包括提取大小、已處理的資料列數，以及執行測試所花的時間。</p><div class="sampleCode"><span codeLanguage="other"><pre>import java.sql.*;
import com.microsoft.sqlserver.jdbc.SQLServerResultSet;

public class cacheRS {

   public static void main(String[] args) {

      // Create a variable for the connection string.
      String connectionUrl = "jdbc:sqlserver://localhost:1433;" +
            "databaseName=AdventureWorks;integratedSecurity=true;";

      // Declare the JDBC objects.
      Connection con = null;
      Statement stmt = null;
      ResultSet rs = null;

      try {

         // Establish the connection.
         Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
         con = DriverManager.getConnection(connectionUrl);

         // Create and execute an SQL statement that returns a large
         // set of data and then display it.
         String SQL = "SELECT * FROM Sales.SalesOrderDetail;";
         stmt = con.createStatement(SQLServerResultSet.TYPE_SS_SERVER_CURSOR_FORWARD_ONLY, +
               SQLServerResultSet.CONCUR_READ_ONLY);

         // Perform a fetch for every row in the result set.
         rs = stmt.executeQuery(SQL);
         timerTest(1, rs);
         rs.close();

         // Perform a fetch for every tenth row in the result set.
         rs = stmt.executeQuery(SQL);
         timerTest(10, rs);
         rs.close();

         // Perform a fetch for every 100th row in the result set.
         rs = stmt.executeQuery(SQL);
         timerTest(100, rs);
         rs.close();

         // Perform a fetch for every 1000th row in the result set.
         rs = stmt.executeQuery(SQL);
         timerTest(1000, rs);
         rs.close();

         // Perform a fetch for every 128th row (the default) in the result set.
         rs = stmt.executeQuery(SQL);
         timerTest(0, rs);
         rs.close();
      }

      // Handle any errors that may have occurred.
      catch (Exception e) {
         e.printStackTrace();
      }

      finally {
         if (rs != null) try { rs.close(); } catch(Exception e) {}
         if (stmt != null) try { stmt.close(); } catch(Exception e) {}
         if (con != null) try { con.close(); } catch(Exception e) {}
      }
   }

   private static void timerTest(int fetchSize, ResultSet rs) {
      try {

         // Declare the variables for tracking the row count and elapsed time.
         int rowCount = 0;
         long startTime = 0;
         long stopTime = 0;
         long runTime = 0;

         // Set the fetch size then iterate through the result set to
         // cache the data locally.
         rs.setFetchSize(fetchSize);
         startTime = System.currentTimeMillis();
         while (rs.next()) {
            rowCount++;
         }
         stopTime = System.currentTimeMillis();
         runTime = stopTime - startTime;

         // Display the results of the timer test.
         System.out.println("FETCH SIZE: " + rs.getFetchSize());
         System.out.println("ROWS PROCESSED: " + rowCount);
         System.out.println("TIME TO EXECUTE: " + runTime);
         System.out.println();

      } catch (Exception e) {
         e.printStackTrace();
      }
   }
}</pre></span></div></div><span id="seeAlsoSpan"><h1 class="heading">請參閱</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="4fc4b1c6-3075-4ad7-9244-865d9ede7ae6.htm">使用結果集</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">將有關本主題的<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\d感謝您的意見反應。開發人員撰寫小組會使用您的意見反應改善文件集。檢閱意見反應的同時，我們可能會傳送電子郵件給您要求提供進一步說明或是解決方案的意見。電子郵件地址不會用於任何其他目的，檢閱後將會刪除。%0\A如需有關%20Microsoft%20隱私權原則的詳細資訊，請參閱%20http://privacy.microsoft.com/zh-tw/default.aspx。%0\A%0\d','客戶回函');">意見反應</a>傳送給 Microsoft。</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012 Microsoft.著作權所有，並保留一切權利。</a></p></span></div></div></body></html>