<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>使用適應性緩衝</title><meta name="Language" content="zh-cht" /><meta name="System.Keywords" content="適應性" /><meta name="System.Keywords" content="適應性緩衝" /><meta name="System.Keywords" content="isWrapperFor" /><meta name="System.Keywords" content="selectMethod" /><meta name="System.Keywords" content="unwrap" /><meta name="Microsoft.Help.Id" content="92d4e3be-c3e9-4732-9a60-b57f4d0f7cb7" /><meta name="Description" content="適應性緩衝是針對在沒有伺服器資料指標負擔的情況下，擷取任何種類的大數值資料而設計的。應用程式可以使用適應性緩衝功能搭配此驅動程式所支援的所有 SQL Server 版本。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">使用適應性緩衝</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>適應性緩衝是針對在沒有伺服器資料指標負擔的情況下，擷取任何種類的大數值資料而設計的。應用程式可以使用適應性緩衝功能搭配此驅動程式所支援的所有 SQL Server 版本。</p><p>一般而言，當 Microsoft JDBC Driver for SQL Server 執行查詢時，驅動程式會將伺服器中的所有結果擷取到應用程式記憶體中。雖然這個方法會將 SQL Server 的資源消耗降到最低，但是它可以針對產生非常大結果的查詢，在 JDBC 應用程式中擲回 <b>OutOfMemoryError</b>。</p><p>為了允許應用程式處理非常龐大的結果，所以 Microsoft JDBC Driver for SQL Server 提供了適應性緩衝。利用適應性緩衝，此驅動程式會在應用程式需要時，從 SQL Server 中擷取陳述式執行結果，而非一次擷取所有結果。只要應用程式不再存取這些結果，驅動程式也可以捨棄它們。下面是適應性緩衝可能有用的部分範例：</p><ul><li><p><b>查詢會產生非常龐大的結果集：</b>應用程式可以執行 SELECT 陳述式，該陳述式會產生比應用程式可以儲存在記憶體中還要多的資料列。在舊版中，應用程式必須使用伺服器資料指標來避免 <b>OutOfMemoryError</b>。適應性緩衝可以針對任意大的結果集進行順向唯讀行程，而不需要伺服器資料指標。</p></li><li><p><b>此查詢會產生非常龐大的 </b><a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a><b> 資料行或 </b><a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a><b> OUT 參數值：</b>應用程式可以擷取因為過大而無法完整納入應用程式記憶體中的單一值 (資料行或 OUT 參數)。適應性緩衝可讓用戶端應用程式使用 <b>getAsciiStream</b>、<b>getBinaryStream,</b> 或 <b>getCharacterStream</b> 方法，擷取諸如資料流的值。應用程式會在從資料流讀取時，擷取 SQL Server 中的值。</p><p /></li></ul><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>透過適應性緩衝，JDBC Driver 只會緩衝處理它所需的資料量。此驅動程式不會提供任何公用方法來控制或限制緩衝區的大小。</p></div></div><h1 class="heading">設定適應性緩衝</h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>從 JDBC 驅動程式 2.0 版開始，此驅動程式的預設行為是 "<span sdata="langKeyword" value="adaptive"><span class="keyword">adaptive</span></span>"。換言之，若要取得適應性緩衝行為，您的應用程式不需要明確要求適應性行為。不過，在 1.2 版中，預設的緩衝模式為 "<span sdata="langKeyword" value="full"><span class="keyword">full</span></span>"，而且應用程式必須明確要求適應性緩衝模式。</p><p>應用程式可以要求陳述式執行應該使用適應性緩衝的方式有三種：</p><ul><li><p>應用程式可以將連接屬性 <span sdata="langKeyword" value="responseBuffering"><span class="keyword">responseBuffering</span></span> 設定為 "adaptive"。如需有關設定連接屬性的詳細資訊，請參閱＜<span sdata="link"><a href="f1b62700-f046-488d-bd6b-a5cd8fc345b7.htm">設定連接屬性</a></span>＞。</p></li><li><p>應用程式可以使用 <a href="097434fd-2b74-411c-a5ed-eba04481dde5.htm">SQLServerDataSource</a> 物件的 <a href="c9e43ff2-8117-4dca-982d-83c863d0c8e1.htm">setResponseBuffering</a> 方法，設定透過該 <a href="097434fd-2b74-411c-a5ed-eba04481dde5.htm">SQLServerDataSource</a> 物件建立之所有連接的回應緩衝處理模式。</p></li><li><p>應用程式可以使用 <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> 類別的 <a href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a> 方法來設定特定陳述式物件的回應緩衝模式。</p></li></ul><p>使用 JDBC 驅動程式 1.2 版時，應用程式原本必須將陳述式物件轉換成 <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> 類別，才能使用 <a href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a> 方法。＜<span sdata="link"><a href="6c986144-3854-4352-8331-e79eccbefc28.htm">讀取大型資料範例</a></span>＞和＜<span sdata="link"><a href="58c76635-a117-4661-8781-d6cb231c5809.htm">使用預存程序讀取大型資料範例</a></span>＞中的程式碼範例會示範這種舊的使用方式。</p><p>不過，使用 JDBC 驅動程式 2.0 版時，應用程式可以使用 <a href="53f3291f-d43a-476b-a656-d86168dacf6c.htm">isWrapperFor</a> 方法和 <a href="ce680176-ef04-4e44-bb6c-ec50bd06e7e6.htm">unwrap</a> 方法來存取供應商特有的功能，而不需要提出有關實作類別階層的任何假設。如需範例程式碼，請參閱＜<span sdata="link"><a href="76ecc05f-a77d-40a2-bab9-91a7fcf17347.htm">更新大型資料範例</a></span>＞主題。</p></div><h1 class="heading">利用適應性緩衝擷取大型資料</h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p>使用 get&lt;Type&gt;Stream 方法讀取一次大數值，而且以 SQL Server 傳回的順序存取 ResultSet 資料行和 CallableStatement OUT 參數時，適應性緩衝會將處理結果時的應用程式記憶體使用量降到最低。使用適應性緩衝時：</p><ul><li><p>雖然資料流透過應用程式標示時可以重設，但是在 <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> 和 <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> 類別中定義的 <b>get&lt;Type&gt;Stream</b> 方法預設還是會傳回讀取一次的資料流。如果應用程式想要 <span class="code">reset</span> 資料流，必須先在該資料流上呼叫 <span class="code">mark</span> 方法。</p></li><li><p>在 <a href="24170524-e1ab-4e80-8fd1-6688efacfbde.htm">SQLServerClob</a> 和 <a href="88bd8623-889d-4b5d-99ff-c85b32f3ff5c.htm">SQLServerBlob</a> 類別中定義的 <b>get&lt;Type&gt;Stream</b> 方法會傳回永遠可以重新定位到資料流開始位置的資料流，而不需要呼叫 <span class="code">mark</span> 方法。</p></li></ul><p>當應用程式使用適應性緩衝時，僅可以擷取一次 <b>get&lt;Type&gt;Stream</b> 方法擷取的值。如果您在呼叫相同物件的 <b>get&lt;Type&gt;Stream</b> 方法後，嘗試針對相同的資料行或參數呼叫任何 <b>get&lt;Type&gt;</b> 方法，會擲回例外狀況訊息：「資料已存取，此資料行或參數無法使用」。</p></div><h1 class="heading">使用適應性緩衝的指導方針</h1><div id="sectionSection2" class="section" name="collapseableSection" style=""><p>開發人員應該遵循這些重要的指導方針，將應用程式的記憶體使用量降到最低：</p><ul><li><p>請避免使用 <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> 連接字串屬性，好讓應用程式處理非常龐大的結果集。適應性緩衝功能可讓應用程式處理非常大的順向唯讀結果集，而不需要使用伺服器資料指標。請注意，當您設定 <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> 時，該連接所產生的所有順向唯讀結果集都會受到影響。換言之，如果您的應用程式例行地處理含有少數資料列的簡短結果集，就用戶端和伺服器端而言，針對每個結果集建立、讀取和關閉伺服器資料指標所使用的資源會比 <span sdata="langKeyword" value="selectMethod"><span class="keyword">selectMethod</span></span> 沒有設定為 <span sdata="langKeyword" value="cursor"><span class="keyword">cursor</span></span> 的情況還多。</p></li><li><p>請使用 <b>getAsciiStream</b>、<b>getBinaryStream,</b> 或 <b>getCharacterStream</b> 方法，而非 <b>getBlob</b> 或 <b>getClob</b> 方法，將大型文字或二進位值讀取為資料流。從 1.2 版開始，<a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> 類別會針對此用途提供新的 <b>get&lt;Type&gt;Stream</b> 方法。</p></li><li><p>確保潛在具有大數值的資料行放置在 SELECT 陳述式之資料行清單中的最後面，並確保 <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> 的 <b>get&lt;Type&gt;Stream</b> 方法用於以選取的順序存取資料行。</p></li><li><p>確保潛在具有大數值的 OUT 參數在用於建立 <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> 的 SQL 中的參數清單結尾宣告。此外，確保 <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> 的 <b>get&lt;Type&gt;Stream</b> 方法用於以宣告的順序存取 OUT 參數。</p></li><li><p>避免在相同的連接上，同時執行一個以上的陳述式。在處理前一個陳述式的結果前執行其他陳述式可能會使未處理的結果在應用程式記憶體中緩衝處理。</p></li><li><p>下面是一些使用 <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> 而非 <span sdata="langKeyword" value="responseBuffering=adaptive"><span class="keyword">responseBuffering=adaptive</span></span> 會更有效率的情況，例如：</p><ul><li><p>如果您的應用程式處理順向唯讀結果集的速度很慢 (例如在部分使用者輸入之後讀取每個資料列)，使用 <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> 而非 <span sdata="langKeyword" value="responseBuffering=adaptive"><span class="keyword">responseBuffering=adaptive</span></span> 可能會有助於減少 SQL Server 所使用的資源。</p></li><li><p>如果您的應用程式針對相同的連接同時處理兩個以上的順向唯讀結果集，使用 <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> 而非 <span sdata="langKeyword" value="responseBuffering=adaptive"><span class="keyword">responseBuffering=adaptive</span></span> 可能會有助於減少驅動程式在處理這些結果集時所需的記憶體。</p></li></ul><p>在這兩種情況下，您必須考慮建立、讀取和關閉伺服器資料指標的負擔。</p></li></ul><p>此外，下列清單將針對可捲動和順向可更新的結果集提供一些建議事項：</p><ul><li><p>若為可捲動的結果集，在提取資料列的區塊時，此驅動程式一定會將 <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> 物件之 <a href="7bc96930-b0c9-42f6-8df9-1d8d824408b3.htm">getFetchSize</a> 方法所指定的資料列數目讀入記憶體中，即使已啟用適應性緩衝也一樣。如果捲動導致 <b>OutOfMemoryError</b>，您可以呼叫 <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> 物件的 <a href="233bf4f8-4758-42d0-a80b-33e34fa78027.htm">setFetchSize</a> 方法，將提取大小設定為更小的資料列數目 (必要時，甚至可以降低至 1 個資料列)，藉此減少所提取的資料列數目。如果這樣做無法防止 <b>OutOfMemoryError, </b>請避免在可捲動的結果集中包含非常龐大的資料行。</p></li><li><p>若為順向可更新的結果集，在提取資料列的區塊時，此驅動程式通常會將 <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> 物件之 <a href="7bc96930-b0c9-42f6-8df9-1d8d824408b3.htm">getFetchSize</a> 方法所指定的資料列數目讀入記憶體中，即使連接已啟用適應性緩衝也一樣。如果呼叫 <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> 物件的 <a href="60248447-6908-4036-a779-a501453cd553.htm">next</a> 方法導致 <b>OutOfMemoryError</b>，您可以呼叫 <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> 物件的 <a href="233bf4f8-4758-42d0-a80b-33e34fa78027.htm">setFetchSize</a> 方法，將提取大小設定為更小的資料列數目 (必要時，甚至可以降低至 1 個資料列)，藉此減少所提取的資料列數目。此外，您也可以在執行陳述式之前，呼叫 <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> 物件的 <a href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a> 方法並搭配 "<span sdata="langKeyword" value="adaptive"><span class="keyword">adaptive</span></span>" 參數，藉此強制驅動程式不要緩衝處理任何資料列。因為結果集並非可捲動，所以如果應用程式使用其中一個 <b>get&lt;Type&gt;Stream</b> 方法來存取大型資料行值，此驅動程式就會在應用程式讀取該值時捨棄它，就如同針對順向唯讀結果集所做的一樣。</p></li></ul></div><span id="seeAlsoSpan"><h1 class="heading">請參閱</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="e1592499-b87b-45ee-bab8-beaba8fde841.htm">增進 JDBC 驅動程式的效能與可靠性</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">將有關本主題的<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\d感謝您的意見反應。開發人員撰寫小組會使用您的意見反應改善文件集。檢閱意見反應的同時，我們可能會傳送電子郵件給您要求提供進一步說明或是解決方案的意見。電子郵件地址不會用於任何其他目的，檢閱後將會刪除。%0\A如需有關%20Microsoft%20隱私權原則的詳細資訊，請參閱%20http://privacy.microsoft.com/zh-tw/default.aspx。%0\A%0\d','客戶回函');">意見反應</a>傳送給 Microsoft。</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012 Microsoft.著作權所有，並保留一切權利。</a></p></span></div></div></body></html>