<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>了解交易</title><meta name="Language" content="zh-cht" /><meta name="System.Keywords" content="交易" /><meta name="Microsoft.Help.Id" content="d3e0414c-6809-4bb1-93b1-4960507faecc" /><meta name="Description" content="交易是併入邏輯工作單位的作業群組。它們是用來控制及維護交易中每個動作的一致性與完整性，儘管系統可能會發生錯誤。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">了解交易</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>交易是併入邏輯工作單位的作業群組。它們是用來控制及維護交易中每個動作的一致性與完整性，儘管系統可能會發生錯誤。</p><p>利用 Microsoft JDBC Driver for SQL Server，交易可以是本機或分散式。交易也可使用隔離等級。如需有關 JDBC 驅動程式 所支援之隔離等級的詳細資訊，請參閱＜<span sdata="link"><a href="2c41e23a-da6c-4650-b5fc-b5fe53ba65c3.htm">了解隔離等級</a></span>＞。</p><p>應用程式應該使用 Transact-SQL 陳述式或 JDBC Driver 所提供的方法來控制交易，但不可同時使用這兩者。針對相同的交易同時使用 Transact-SQL 陳述式和 JDBC API 方法可能會導致問題發生，例如無法依照預期方式認可交易、交易已認可或回復但新的交易非預期地啟動，或者發生「無法繼續交易」例外狀況。</p></div><h1 class="heading">使用本機交易</h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>當交易為單一階段交易時，便會視為本機交易，該交易是由資料庫直接處理。JDBC 驅動程式 使用 <a href="937292a6-1525-423e-a2b2-a18fd34c2893.htm">SQLServerConnection</a> 類別的各種方法以支援本機交易，包括 <a href="db1e22d2-e53f-474e-8c99-cb1fff7f491a.htm">setAutoCommit</a>、<a href="c7346165-51bf-4844-b64c-29833c147236.htm">commit</a> 與 <a href="7adb6772-4047-4d8e-931d-b3d20eec44b5.htm">rollback</a>。本機交易通常是由應用程式明確管理，或由 Java Platform Enterprise Edition (Java EE) 應用程式伺服器自動管理。</p><p>下列範例會執行<span class="code"> try </span>區塊中由二段個別陳述式組成的本機交易。這些陳述式是針對 SQL Server 2005 AdventureWorks 範例資料庫中的 Production.ScrapReason 資料表執行，若沒有發生任何例外狀況，便會認可它們。如果發生例外狀況，<span class="code"> catch </span>區塊中的程式碼便會回復交易。</p><div name="snippetGroup"><div class="sampleCode"><span codeLanguage="Java"><pre>public static void executeTransaction(Connection con) {
   try {
      //Switch to manual transaction mode by setting
      //autocommit to false. Note that this starts the first 
      //manual transaction.
      con.setAutoCommit(false);
      Statement stmt = con.createStatement();
      stmt.executeUpdate("INSERT INTO Production.ScrapReason(Name) VALUES('Wrong size')");
      stmt.executeUpdate("INSERT INTO Production.ScrapReason(Name) VALUES('Wrong color')");
      con.commit(); //This commits the transaction and starts a new one.
      stmt.close(); //This turns off the transaction.
      System.out.println("Transaction succeeded. Both records were written to the database.");
   }
   catch (SQLException ex) {
      ex.printStackTrace();
      try {
         System.out.println("Transaction failed.");
         con.rollback();
      }
      catch (SQLException se) {
         se.printStackTrace();
      }
   }
}

</pre></span></div></div></div><h1 class="heading">使用分散式交易</h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p>分散式交易會在兩個或以上的網路資料庫上更新資料，並同時保留重要的不可部分完成、一致、獨立且持久的 (ACID) 交易處理屬性。分散式交易支援已新增至 JDBC 2.0 Optional API 規格中的 JDBC API。分散式交易的管理通常是由 Java EE 應用程式伺服器環境中的 Java Transaction Service (JTS) 交易管理員自動執行。然而，Microsoft JDBC Driver for SQL Server 支援任何 Java Transaction API (JTA) 相容之交易管理員下的分散式交易。</p><p>JDBC 驅動程式 與 Microsoft 分散式交易協調器 (MS DTC) 密切整合，以提供 SQL Server 實際的分散式交易支援。MS DTC 是一種由 Microsoft 針對 Microsoft Windows 系統所提供的分散式交易機制。MS DTC 使用來自 Microsoft 經過驗證的交易處理技術以支援 XA 功能，如完整的二階段分散式認可通訊協定，以及分散式交易的復原。</p><p>如需如何使用分散式交易的詳細資訊，請參閱＜<span sdata="link"><a href="574e326f-0520-4003-bdf1-62d92c3db457.htm">了解 XA 交易</a></span>＞。</p></div><span id="seeAlsoSpan"><h1 class="heading">請參閱</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="afbb776f-05dc-4e79-bb25-2c340483e401.htm">以 JDBC 驅動程式執行交易</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">將有關本主題的<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\d感謝您的意見反應。開發人員撰寫小組會使用您的意見反應改善文件集。檢閱意見反應的同時，我們可能會傳送電子郵件給您要求提供進一步說明或是解決方案的意見。電子郵件地址不會用於任何其他目的，檢閱後將會刪除。%0\A如需有關%20Microsoft%20隱私權原則的詳細資訊，請參閱%20http://privacy.microsoft.com/zh-tw/default.aspx。%0\A%0\d','客戶回函');">意見反應</a>傳送給 Microsoft。</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012 Microsoft.著作權所有，並保留一切權利。</a></p></span></div></div></body></html>